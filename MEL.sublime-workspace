{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rea",
				"read_data\tstd::vector<double> read_data()"
			],
			[
				"read",
				"read_message\tstd::string read_message()"
			],
			[
				"wr",
				"write_message\tvoid write_message(const std::string &message)"
			],
			[
				"m",
				"MelShare\tMelShare"
			],
			[
				"SOUR",
				"SOURCE_FILES"
			],
			[
				"time",
				"timeout_\tmel::Time timeout_"
			],
			[
				"Q",
				"QOptions"
			],
			[
				"HEAD",
				"HEADER_FILES"
			],
			[
				"He",
				"HEADER_FILES"
			],
			[
				"HE",
				"HEADER_FILES"
			],
			[
				"up",
				"update_input"
			],
			[
				"set",
				"set_value"
			],
			[
				"set_",
				"set_initial_values"
			],
			[
				"Cu",
				"CurrentMode2\tmel::QOptions::AoMode CurrentMode2"
			],
			[
				"seten",
				"set_encoder_velocity\tvoid set_encoder_velocity(mel::uint32 channel_number, double velocity)"
			],
			[
				"set_enco",
				"set_encoder_detection_a\tvoid set_encoder_detection_a(mel::uint32 channel_number, mel::QOptions::EncoderDetection detection)"
			],
			[
				"Fil",
				"Filtered\tmel::QOptions::EncoderFilter Filtered"
			],
			[
				"Enco",
				"EncoderReload\tEncoderReload"
			],
			[
				"Filter",
				"EncoderFilter\tEncoderFilter"
			],
			[
				"dec",
				"decimation\tmel::uint32 decimation"
			],
			[
				"EncD",
				"EncDetection"
			],
			[
				"update",
				"UpdateRate\tUpdateRate"
			],
			[
				"QA",
				"QAnalogInput"
			],
			[
				"valid",
				"validate_channel_number"
			],
			[
				"validate_ch",
				"validate_channel_count"
			],
			[
				"cha",
				"channel_numbers_"
			],
			[
				"string",
				"stringify"
			],
			[
				"strin",
				"stringify"
			],
			[
				"ch",
				"channel_numbers_"
			],
			[
				"vali",
				"validate_channel_number"
			],
			[
				"fina",
				"final_values"
			],
			[
				"ini",
				"initial_values"
			],
			[
				"initi",
				"initial_values_"
			],
			[
				"chann",
				"channel_number_"
			],
			[
				"get",
				"get_value"
			],
			[
				"channel_",
				"channel_number"
			],
			[
				"chan",
				"channel_number_"
			],
			[
				"channel_n",
				"channel_numbers_"
			],
			[
				"R",
				"ReleaseSuccess"
			],
			[
				"Rle",
				"ReleaseSuccess\tmel::Mutex::Status ReleaseSuccess"
			],
			[
				"Mut",
				"MutexHandle\tMutexHandle"
			],
			[
				"writ",
				"write\tmel::SharedMemory::Status write(mel::Packet &packet)"
			],
			[
				"map_",
				"map_buffer"
			],
			[
				"as",
				"as_microseconds\tmel::int64 as_microseconds() const"
			],
			[
				"mel",
				"melnetB"
			],
			[
				"rece",
				"receive_data\tint receive_data()"
			],
			[
				"local",
				"local_host_"
			],
			[
				"meln",
				"melnetB"
			],
			[
				"send",
				"send_message\tvoid send_message(std::string &message)"
			],
			[
				"melN",
				"melnetB"
			],
			[
				"pack",
				"packet_send_"
			],
			[
				"cpu",
				"cpu_usage_total\tdouble cpu_usage_total()"
			],
			[
				"dis",
				"_DISABLE_PER_THREAD_LOCALE\t_DISABLE_PER_THREAD_LOCALE"
			],
			[
				"in",
				"Input\tInput"
			],
			[
				"target",
				"target_link_libraries\tcommand"
			],
			[
				"sub",
				"sub_path"
			],
			[
				"dir",
				"directory"
			],
			[
				"pri",
				"print\tvoid print(T value)"
			],
			[
				"tar",
				"target_link_libraries\tcommand"
			],
			[
				"vec",
				"vector\tstd::vector"
			],
			[
				"motr",
				"motor_to_joint\tfunction"
			],
			[
				"ETA",
				"ETA_INV\tstatement"
			],
			[
				"MAX",
				"MAX_SAMPLE_RATE\tstatement"
			],
			[
				"res",
				"reset_value_register\tstatement"
			],
			[
				"spli",
				"split_input"
			],
			[
				"rename_da",
				"rename_data_name_factory"
			],
			[
				"rena",
				"rename_data_name\tfunction"
			],
			[
				"ren",
				"rename_io\tfunction"
			],
			[
				"setFix",
				"setFixedSize\tfunction"
			],
			[
				"prompt_conf",
				"prompt_configure_modules\tfunction"
			],
			[
				"minim",
				"minimumSize\tfunction"
			],
			[
				"sample",
				"sampled_values_text\tstatement"
			],
			[
				"samp",
				"sample_data\tfunction"
			],
			[
				"rem",
				"removeTab\tfunction"
			],
			[
				"scope_mo",
				"scope_modules\tstatement"
			],
			[
				"scope_mode",
				"scope_mode_options\tstatement"
			],
			[
				"io_l",
				"io_layout\tstatement"
			],
			[
				"remove",
				"removeWidget\tfunction"
			],
			[
				"QDo",
				"QDoubleSpinBox"
			],
			[
				"Ql",
				"QLineEdit"
			],
			[
				"la",
				"layout\tstatement"
			],
			[
				"theme_sc",
				"theme_scope_fg_colors\tstatement"
			],
			[
				"theme_",
				"theme_options\tstatement"
			],
			[
				"theme_sco",
				"theme_scope_vb_colors\tstatement"
			],
			[
				"setM",
				"setMinimumWidth\tfunction"
			],
			[
				"remo",
				"removeWidget\tfunction"
			],
			[
				"sel",
				"selected_color\tstatement"
			],
			[
				"setFixed",
				"setFixedWidth\tfunction"
			],
			[
				"setLay",
				"setLayoutDirection\tfunction"
			],
			[
				"plo",
				"plot_widget\tstatement"
			],
			[
				"title",
				"title_line_edits"
			],
			[
				"def",
				"default_curve_size\tstatement"
			],
			[
				"melsh",
				"melshare_buffer\tstatement"
			],
			[
				"sampe",
				"sample_duration\tstatement"
			],
			[
				"connec",
				"connect_melshare\tfunction"
			],
			[
				"prompt",
				"prompt_set_scope_filters\tfunction"
			],
			[
				"Dia",
				"QInputDialog"
			],
			[
				"resize",
				"resize_grid\tfunction"
			],
			[
				"add",
				"addWidget\tfunction"
			],
			[
				"scop",
				"scope_count\tstatement"
			],
			[
				"save_sc",
				"save_scope_file_as\tfunction"
			],
			[
				"doubeC",
				"mouseDoubleClickEvent"
			],
			[
				"setCur",
				"setCursorPosition\tfunction"
			],
			[
				"mels",
				"melshare_size\tglobalstmt"
			],
			[
				"clear",
				"clear_scope\tfunction"
			],
			[
				"conn",
				"connect_melshare\tfunction"
			],
			[
				"trig",
				"triggered\tfunction"
			],
			[
				"c_ch",
				"c_char_p\tclass"
			],
			[
				"Qinpu",
				"QInputDialog\tclass"
			],
			[
				"c_vo",
				"c_void_p\tclass"
			],
			[
				"my_",
				"my_doubles"
			],
			[
				"Int",
				"IntArray7"
			],
			[
				"v",
				"value\tinstance"
			],
			[
				"my",
				"my_doubles"
			],
			[
				"va",
				"values"
			],
			[
				"veloc",
				"velocityTicks"
			],
			[
				"foot",
				"footerFont"
			],
			[
				"setSty",
				"setStyleSheet\tfunction"
			],
			[
				"Dou",
				"DoubleArray16"
			],
			[
				"rec",
				"rec_message"
			],
			[
				"ve",
				"Vector3\tclass"
			],
			[
				"reduced",
				"reduced_str"
			],
			[
				"DER",
				"DERIVED_UNITS"
			],
			[
				"appl",
				"applyPrefixPower"
			],
			[
				"reduce",
				"reduced_dict"
			],
			[
				"reduc",
				"reduced_dict"
			],
			[
				"sepe",
				"separatePrefix"
			],
			[
				"mult",
				"multi_chars"
			]
		]
	},
	"buffers":
	[
		{
			"file": "include/MEL/Communications/MelShare.hpp",
			"settings":
			{
				"buffer_size": 1449,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "CMake (MinGW-Win32)",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake",
					""
				],
				[
					"CMake (Make)",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake (MSVC)",
					""
				],
				[
					"CMake (MinGW)",
					""
				],
				[
					"Make",
					""
				],
				[
					"Python",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake (MSVC-Win64)",
					""
				],
				[
					"CMake (MinGW-Linux)",
					""
				],
				[
					"CMake (MinGW-Win32)",
					""
				],
				[
					"Make (Linux)",
					""
				],
				[
					"Make (Win32)",
					""
				],
				[
					"Python",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Python",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake (Make)",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake + Make",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"CMake",
					""
				],
				[
					"CMake (Make)",
					""
				]
			],
			[
				"CMake (Make)",
				""
			]
		],
		[
			[
				[
					"CMake",
					""
				],
				[
					"CMake (Make)",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"CMake",
				""
			]
		],
		[
			[
				[
					"CMake (MSVC)",
					""
				],
				[
					"CMake (MinGW)",
					""
				],
				[
					"Make",
					""
				]
			],
			[
				"CMake (MinGW)",
				""
			]
		],
		[
			[
				[
					"CMake (MSVC)",
					""
				],
				[
					"CMake (MinGW)",
					""
				],
				[
					"Make",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Make",
				""
			]
		],
		[
			[
				[
					"CMake (MSVC)",
					""
				],
				[
					"CMake (MinGW)",
					""
				],
				[
					"Make",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Make",
				""
			]
		],
		[
			[
				[
					"CMake (MSVC-Win64)",
					""
				],
				[
					"CMake (MinGW-Linux)",
					""
				],
				[
					"CMake (MinGW-Win32)",
					""
				],
				[
					"Make (Linux)",
					""
				],
				[
					"Make (Win32)",
					""
				]
			],
			[
				"CMake (MinGW-Win32)",
				""
			]
		],
		[
			[
				[
					"CMake (MSVC-Win64)",
					""
				],
				[
					"CMake (MinGW-Linux)",
					""
				],
				[
					"CMake (MinGW-Win32)",
					""
				],
				[
					"Make (Linux)",
					""
				],
				[
					"Make (Win32)",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Make (Win32)",
				""
			]
		],
		[
			[
				[
					"CMake (Make)",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"CMake (Make)",
				""
			]
		],
		[
			[
				[
					"CMake + Make",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"CMake + Make",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 501.0,
		"last_filter": "remove",
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal\t",
				"Package Control: Install Package"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install\t",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Build With: Markdown"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"listp",
				"Package Control: List Packages"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"mard",
				"Markdown Preview: Preview in Browser"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"hexview",
				"HexViewer: Toggle Hex View"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"repos",
				"Package Control: Add Repository"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: Remove Package"
			],
			[
				"sublimerepl",
				"SublimeREPL: Python - IPython"
			],
			[
				"repl ma",
				"SublimeREPL: Matlab"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"package contro ins",
				"Package Control: Install Package"
			],
			[
				"package control: in",
				"Package Control: Install Package"
			],
			[
				"package control:en",
				"Package Control: Enable Package"
			],
			[
				"package control:in",
				"Package Control: Install Package"
			],
			[
				"package control:di",
				"Package Control: Disable Package"
			],
			[
				"package control:dis",
				"Package Control: Disable Package"
			],
			[
				"package control:remo",
				"Package Control: Remove Package"
			],
			[
				"package control:d",
				"Package Control: Disable Package"
			],
			[
				"package control: \t\t",
				"Package Control: Disable Package"
			],
			[
				"package control: ",
				"Package Control: Install Package"
			],
			[
				"packagecontrol",
				"Package Control: Install Package"
			],
			[
				"package cont",
				"Package Control: List Packages"
			],
			[
				"packagecontrol:ins",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"package control remove pac",
				"Package Control: Remove Package"
			],
			[
				"packa\t",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Remove Package"
			]
		],
		"width": 1245.0
	},
	"console":
	{
		"height": 495.0,
		"history":
		[
			"view.run_command('example')",
			"glue path",
			"936631/1000000",
			"2164/1000000",
			"4**50",
			"cls",
			"for i in range(0,10): print(i)",
			"for i in range(0,10):",
			"print range(0,10)",
			"range(0,10)",
			"print x",
			"x",
			"x = range(0,9)",
			"range(0,9)",
			"test3.append('b')",
			"test3",
			"test3 = test2*8",
			"test2 = ('a')",
			"test2",
			"test2.append('a')",
			"test2.count('c')",
			"test2",
			"test2 = ['c']*8",
			"test*2",
			"test = ['a']",
			"string[0] = 'x'",
			"string[0] = x",
			"string",
			"string[0] = x",
			"string[a] = x",
			"string[0]",
			"string = \"abcdefg\"",
			"'0'*8",
			"\"0\"*3",
			"\"0\"*4",
			"for i in range(1,5):;i",
			"for i in range(1,5):",
			"for i in x; i",
			"x",
			"x = range(1,5)",
			"range(1,5)",
			"xrange(5)",
			"for i = 1:6; i",
			"for i = 1:6",
			"\"s\" + str(10)",
			"str(10)",
			"\"S\" + 5",
			"\"A\", \"B\",\"\"\"A B 3\"\"\"",
			"\"A\", \"B\",",
			"import socket; socket.socket(socket.AF,INET,socket.SOCK_STREAM).connect((\"localhost',50298))",
			"clc",
			"clear",
			"print(\"evan\",3)",
			"print(Evan)",
			"print(\"Evan\")",
			"1/0",
			"1/2",
			"ans/2",
			"ans = 132.0",
			"ans",
			"264/2",
			"/2",
			"24*11",
			"1/4",
			"a",
			"a = a/1000",
			"a",
			"a = a/8",
			"a",
			"a = 3000000*64",
			"print \"evan\"",
			"help('string')",
			"print(e)",
			"e = 1",
			"version",
			"help",
			"print(\"Hello\")",
			"print \"Hello\"",
			"print \"Hello\" ",
			"print \"Hello\"",
			"python",
			"a",
			"species1",
			"python",
			"clc",
			"clear",
			"print(a)",
			"a = 2",
			"print \"evan\"",
			"print(b)",
			"print(b(",
			"b = 2",
			"a = 1",
			"print \"hello world\"",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/epeze/Desktop/MEL",
		"/C/Users/epeze/Desktop/MEL/examples",
		"/C/Users/epeze/Desktop/MEL/include",
		"/C/Users/epeze/Desktop/MEL/include/MEL",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Utility",
		"/C/Users/epeze/Desktop/MEL/src",
		"/C/Users/epeze/Desktop/MEL/src/MEL",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Communications",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Utility"
	],
	"file_history":
	[
		"/C/Users/epeze/Desktop/MEL/src/MEL/Communications/MelShare.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/Joint.hpp",
		"/C/Users/epeze/Desktop/MEL/examples/q8usb_loopback.cpp",
		"/C/Users/epeze/Desktop/MEL/examples/ctrl_c_handling.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/EncoderModule.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Module.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/OutputModule.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/EncoderModule.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Communications/SharedMemory.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications/SharedMemory.hpp",
		"/C/Users/epeze/Desktop/MEL/examples/melshare.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/Q8Usb.hpp",
		"/C/Users/epeze/Desktop/MEL/examples/melnet.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications/MelNet.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Communications/MelNet.cpp",
		"/C/Users/epeze/Desktop/MEL/TODO",
		"/C/Users/epeze/Desktop/MEL/testing.cpp",
		"/C/Users/epeze/Desktop/MEL/examples/mutexes.cpp",
		"/C/Users/epeze/Desktop/MEL/bindings/python/test.py",
		"/C/Users/epeze/Desktop/MEL/bindings/python/Mutex.py",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Communications/Packet.cpp",
		"/C/Users/epeze/Desktop/CSharpUdp/CSharpUdp/MelShare.cs",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Utility/Mutex.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Utility/Mutex.hpp",
		"/C/Users/epeze/Desktop/MEL/clean.py",
		"/C/Users/epeze/Desktop/MEL/examples/shared_memory.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications/MelShare.hpp",
		"/C/Users/epeze/Desktop/MEL/CMakeLists.txt",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications/Packet.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Legacy/LClock.hpp",
		"/C/Git/MEL/Examples/examples.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/InputModule.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Legacy/MelShare.hpp",
		"/C/Users/epeze/Desktop/MEL/MEL.sublime-project",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Devices/Q8Usb.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Core/VelocitySensor.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/VelocityModule.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/VelocityModule.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/VelocitySensor.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Core/PositionSensor.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/PositionSensor.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Core/Encoder.cpp",
		"/C/Users/epeze/Desktop/MEL/CMakeLists0.txt",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Legacy/MelShare.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Quanser/QAnalogInput.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/Motor.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Math/Constants.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Devices/Q8Usb.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Channel.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Encoder.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Exoskeletons/OpenWrist.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Exoskeletons/OpenWrist.cpp",
		"/C/Users/epeze/Desktop/MEL/openwrist/main.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Encoder.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Input.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/InputChannel.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Output.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/OutputModule",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QEncoder.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Watchdog.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Watchdog.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QWatchdog.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Quanser/QWatchdog.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Quanser/Q8Usb.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QDaq.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Quanser/QDaq.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Daq.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Daq.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Core/Device.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/Device.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Quanser/Quanser.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/Daq.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QAnalogInput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/Quanser.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QOptions.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications/Socket.hpp",
		"/C/Users/epeze/Dropbox/OpenWrist/OpenWrist/03_Characterization/MATLAB/master_quarc_win64/master_main.c",
		"/C/Users/epeze/Dropbox/OpenWrist/OpenWrist/03_Characterization/MATLAB/master_quarc_win64/master.c",
		"/C/Program Files/Quanser/QUARC/blocks/hil/hil_initialize_block.tlc",
		"/C/Program Files/Quanser/QUARC/blocks/hil/hil_read_digital_timebase_block.tlc",
		"/C/Program Files/Quanser/QUARC/blocks/hil/hil_poll_interrupt_block.tlc",
		"/C/Program Files/Quanser/QUARC/blocks/hil/Quanser/configure_hil_initialize_q8.p",
		"/C/Program Files/Quanser/QUARC/blocks/hil/hil_write_block.tlc",
		"/C/Program Files/Quanser/QUARC/blocks/hil/hil_write_callback.p",
		"/C/Program Files/Quanser/QUARC/blocks/hil/hil_asynchronous_interrupt_callback.p",
		"/C/Users/epeze/Dropbox/OpenWrist/OpenWrist/03_Characterization/MATLAB/master_quarc_win64/master_private.h",
		"/C/Users/epeze/Dropbox/OpenWrist/OpenWrist/03_Characterization/MATLAB/master_quarc_win64/master.h",
		"/C/Users/epeze/Dropbox/OpenWrist/OpenWrist/03_Characterization/MATLAB/master_quarc_win64/master_types.h",
		"/C/Users/epeze/Dropbox/OpenWrist/OpenWrist/03_Characterization/MATLAB/master_quarc_win64/master_dt.h",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq/Quanser/QOptions.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Core/Daq.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QAnalogOutput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QDigitalInput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QDigitalOutput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QVelocity.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq.cpp/Quanser/Q8Usb.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Daq.cpp/Quanser/QAnalogInput.cpp",
		"/C/Users/epeze/Desktop/MEL/examples/crio.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Utility/Console.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Core/Amplifier.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Utility/Error.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QAnalogInut.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/Q2Usb.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QuanserVelocity.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QuanserEncoder.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QuanserAnalogOutput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QuanserAnalogInut.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QuanserDigitalInput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/Quanser/QuanserDigitalOutput.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Utility/Console.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Math/Functions.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Math/Functions.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Utility/System.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Utility/Types.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/AiModule.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/DoModule.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/DiModule.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/AoModule.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/DigitalInput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/AnalogOutput.hpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Daq/AnalogInput.hpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Utility/Keyboard.cpp",
		"/C/Users/epeze/Desktop/MEL/src/MEL/Communications/UdpSocket.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Utility/Keyboard.hpp",
		"/C/Users/epeze/Dropbox/OpenWrist/Software/OpenWrist/OpenWrist/main_whc_2017.cpp",
		"/C/Git/SFML/src/SFML/System/Win32/MutexImpl.cpp",
		"/C/Users/epeze/Desktop/MEL/include/MEL/Communications/UdpSocket.hpp",
		"/C/Users/epeze/AppData/Roaming/Sublime Text 3/Packages/User/PlainTasks.sublime-settings"
	],
	"find":
	{
		"height": 158.0
	},
	"find_in_files":
	{
		"height": 356.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"a",
			"acquire",
			"NamedMutex",
			"shm_data_",
			"2",
			"guard",
			"MaxBufferSize",
			"melnet",
			"MelNet",
			"msg1",
			"position_",
			"PositionSensor",
			"position",
			"PositionSensor",
			"SRC_EXOSKELETONS",
			"SRC_DAQ",
			"SRC_UTILITY",
			"SRC_COMMUNICATIONS",
			"SRC_NI",
			"SRC_WINDOWS",
			"SRC_LEGACY",
			"SOURCE_FILES",
			"COMMUNICATIONS",
			"set_ao_expire_voltages",
			"OutputModule",
			"T",
			"set_encoder_quadrature_factors",
			"QOptions",
			"}\n",
			"timeout_",
			"override",
			"virtual",
			"cpp",
			"src",
			"cpp",
			"src",
			"get_handle()",
			"override",
			"q8_usb_",
			"virtual",
			"q8_usb_",
			"Q8Usb",
			"bool",
			"void",
			"hil",
			"hi",
			"hil",
			"HILReadTimebase_clock",
			"t_clock",
			"HILReadTimebase_Task",
			"hil",
			"ao_final_voltages_",
			"OnPulse",
			"a",
			"0",
			"options",
			"EncReload",
			"EncDetection",
			"EncFilter",
			"EncDir",
			"encoder_detection",
			"EncDir",
			"# ==============================================================================\n",
			"virtual",
			"channel_vec",
			"void",
			"channel_map_",
			"module",
			"at the head of",
			"channel_map_",
			"at",
			"valid_channel_count",
			"validate_channel_count",
			"vector",
			"array",
			"vector",
			"validate_size",
			"DaqModule",
			"Module",
			"channel_map_",
			"make_channel_table",
			"t",
			"void",
			"a",
			"a_",
			"A",
			"OPTION",
			"cont",
			"Test",
			"handle_",
			"Result",
			"RELEASE_FAILED",
			"LOCK_ACQUIRED",
			"LOCK_FAILED",
			"LOCK_TIMEOUT",
			"LOCK_ABANDONED",
			"NOT_OPEN",
			"Result",
			"LOCK_FAILED",
			"static",
			"handle_",
			"Result",
			"on_receive",
			"append",
			"OPEN",
			"CREATE",
			"read_buffer",
			"write_buffer",
			"get_memory",
			"buffer_",
			"append",
			"buffer_",
			"sendto",
			"msg",
			"recvfrom",
			"hMapFile",
			"sockaddr_in",
			"succesmelul",
			"cxxopts",
			"remote_host",
			"remote_address",
			"remote_host",
			"remove_address",
			"blocking",
			"A",
			"melnet",
			"SFML",
			"std::abs"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "include/MEL/Communications/MelShare.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1449,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1245,
										1246
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										512,
										513
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1244,
										1245
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										217,
										218
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 219.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 61.0
	},
	"input":
	{
		"height": 158.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.96342355523,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 320.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 326.0
	},
	"pinned_build_system": "",
	"project": "MEL.sublime-project",
	"replace":
	{
		"height": 113.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"udpsock",
				"src\\MEL\\Communications\\UdpSocket.cpp"
			],
			[
				"mel_uti",
				"include\\MEL\\Utility\\mel_util.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 797.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 2030.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 966.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
