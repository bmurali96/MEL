MEL TODO List
Evan Pezent (epezent@rice.edu)

This TODO list contains things that need adding to MEL, cool ideas, and general thoughts.
It should not be confused as a change log or road map, and it is not intended for public consumption.
For those curious, the list is maintained using the Sublime Text package PlainTasks.

All:
  ☐ Documentation!

Communication:
  ☐ Write Linux implementation of SharedMemory
  ☐ Add methods for vector to Packet (just use underlying in loop?)
  ☐ Make MelNet not use packets (for string at least)

Core:
  ☐ create class for amps
  ☐ make safety check functions more descriptive
  ☐ complete Limiter and incorporate

Daq:
 ☐ a class that derives from VelocitySensor, but takes in a PositionSensor and performs dirty derivation

Q8 USB:

Error:
  ☐ make an error output stream or something like that

Utility:
  ☐ add json parser? header only on github seems good
  ☐ add CSV header only lib
  ☐ Write Linux version of Mutex
  ☐ get_last_os_error(), make static functions not print
  ☐ Clean up / rethink StateMachine
  ☐ templatize DataLog

OpenWrist:
  ☐ figure out how to nicely integrate separate OpenWrist project outside of MEL

MELScope:
  ✔ fix crash on close @done (18-01-21 15:42)

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ figure out how to do inheritance with the Channel classes @done (18-01-11 21:41) @project(Daq)
 ✔ overload [] operator for robot to go to joint @done (18-01-11 21:40) @project(Core)
 ✔ on disable/close needs to reset settings to factory so current mode doesn't cause kick @done (18-01-10 21:31) @project(Q8 USB)
 ✔ overload [] to get channel, and () on channel to set, get value @done (18-01-04 23:19) @project(Daq)
 ✔ ranges, misc functions @done (18-01-04 19:54) @project(Daq)
 ✔ determine what the hell Q8 velocity units are and if quadrature affects it @done (18-01-04 19:53) @project(Daq)
 ✘ Choose to more tightly integrate Packet or not @cancelled (17-12-30 19:21) @project(SharedMemory)
 ✔ Make size known to class at write and read @done (17-12-30 19:21) @project(SharedMemory)
 ✔ Q8 encoder velocity, @done (17-12-28 16:09) @project(Daq)
 ✔ Module  <- AnalogInput / AnalogOutput / DigitalInput / DigitalOutput / Encoder ^^^ @done (17-12-28 01:16) @project(Daq)
 ✔ Daq <- Q8Usb / CRio ^^^ @done (17-12-28 01:16) @project(Daq)
 ✘ add open/close? @cancelled (17-12-28 01:15) @project(Devece)
 ✘ Channel <- OutputChannel / InputChannel @cancelled (17-12-28 01:15) @project(Daq)
 ✔ Modularize - make each I/O a separate class/module, Q8 inherent from all @done (17-12-28 01:15) @project(Daq)
 ✘ is this necessary, really? @cancelled (17-12-28 01:14) @project(Devece)
 ✘ Should this expose "on_enable", "on_disable", etc? Could alleviate "enable_" issue @cancelled (17-12-28 01:14) @project(Device)
 ✔ make enable/disable return bool @done (17-12-28 01:14) @project(Devece)
 ✔ Add control-C handler function/class @done (17-12-22 15:15) @project(Console)
 ✔ Make NonCopyable @done (17-12-21 11:31) @project(Mutex)
 ✔ Change to match format of new classes @done (17-12-21 11:31) @project(Mutex)
