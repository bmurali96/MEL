MEL TODO List
Evan Pezent (epezent@rice.edu)

This TODO list contains things that need adding to MEL, cool ideas, and general thoughts.
It should not be confused as a change log or road map, and it is not intended for public consumption.
For those curious, the list is maintained using the Sublime Text package PlainTasks.

CTRL-ENTER - new task
CTRL+D - mark done
CTRL+SHIFT+A - archive


All:
  ☐ Documentation!

Communication:
  ✔ Write Linux implementation of SharedMemory @done (18-05-13 18:54)
  ✔ Add methods for vector to Packet (just use underlying in loop?) @done (18-05-13 18:54)
  ☐ Make MelNet not use packets (for string at least)
  ☐ BTP? http://ieeexplore.ieee.org/document/5089429/
  ☐ make MelShare use [] operators and templetize to one type
  ☐ melshare uses packets but sting<->packet don't work
  ☐ Packet classes for Python and C#

Core:
  ☐ add Clock to PdController, generalize for all exos

Daq:
  ☐ move q8/q2 id to quanser daq...-1 for auto

Q8 USB:

NI myRIO:
  ☐ wrap C functions into a Daq class

Logger:

Utility:
  ☐ add json parser? header only on github seems good
  ☐ add CSV header only lib
  ☐ get_last_os_error(), make static functions not print
  ☐ Clean up / rethink StateMachine
  ☐ async console printing (new thread, tcp/ip server, or something else?)

Logging:
  ☐ LogSever / RemoteWriter for remote logging
  ☐ Make Logger and DataLogger more distinct
    ☐ BufferLog -> DataLogger / FileLog -> DebugLogger

OpenWrist:

MELScope:
  ☐ freezes when UDP disconnected

MELNet:
  ☐ make messages use TCP

Long Term Plans/Ideas:
  ☐ entity-component based core library

Core:
  ☐ DisturbanceObserver


Update Engine:
  ☐ class Updatable
  ☐ class Updater, Hub, World, etc
  ☐ add derived Updatables to Hub
  ☐ Updatable calls update on all Updateables
  ☐ each updatable has a pointer/referencec to its Engine
  ☐ each update may have child components?
  ☐ DAQ Egine is a separate thing
  ☐ how does an OpenWrist get constructed? how does it know which channels?
  ☐ Require type-of
  ☐ Engine
    ☐ Object1 (Q8)
    ☐ Object2 (OpenWrist)
      ☐ Object2,1 (Joint)
        ☐ Component1,1 (Acuator)
        ☐ Component1,2 (Encoder)
      ☐ Object2,2
        ☐ ...

  ☐ Objects own components, but Objects don't own child objects


＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ make safety check functions more descriptive @done (18-02-16 16:04) @project(Core)
 ✔ ctrl handler Linux @done (18-02-16 16:04) @project(Utility)
 ✔ a class that derives from VelocitySensor, but takes in a PositionSensor and performs dirty derivation @done (18-02-16 16:04) @project(Daq)
 ✔ Socket.hpp includes winsock, which includes windows.h ... make SocketImpl.hpp @done (18-02-16 16:04) @project(Utility)
 ✔ Write Linux version of Mutex @done (18-02-07 22:03) @project(Utility)
 ✔ make an error output stream or something like that @done (18-02-06 21:50) @project(Error)
 ✔ get_module<TModule> @done (18-02-06 21:50) @project(Daq)
 ✔ complete Limiter and incorporate @done (18-01-31 21:19) @project(Core)
 ✔ templatize DataLog @done (18-01-27 18:22) @project(Utility)
 ✔ figure out how to nicely integrate separate OpenWrist project outside of MEL @done (18-01-27 18:22) @project(OpenWrist)
 ✔ create class for amps @done (18-01-27 18:22) @project(Core)
 ✔ fix crash on close @done (18-01-21 15:42) @project(MELScope)
 ✔ figure out how to do inheritance with the Channel classes @done (18-01-11 21:41) @project(Daq)
 ✔ overload [] operator for robot to go to joint @done (18-01-11 21:40) @project(Core)
 ✔ on disable/close needs to reset settings to factory so current mode doesn't cause kick @done (18-01-10 21:31) @project(Q8 USB)
 ✔ overload [] to get channel, and () on channel to set, get value @done (18-01-04 23:19) @project(Daq)
 ✔ ranges, misc functions @done (18-01-04 19:54) @project(Daq)
 ✔ determine what the hell Q8 velocity units are and if quadrature affects it @done (18-01-04 19:53) @project(Daq)
 ✘ Choose to more tightly integrate Packet or not @cancelled (17-12-30 19:21) @project(SharedMemory)
 ✔ Make size known to class at write and read @done (17-12-30 19:21) @project(SharedMemory)
 ✔ Q8 encoder velocity, @done (17-12-28 16:09) @project(Daq)
 ✔ Module  <- AnalogInput / AnalogOutput / DigitalInput / DigitalOutput / Encoder ^^^ @done (17-12-28 01:16) @project(Daq)
 ✔ Daq <- Q8Usb / CRio ^^^ @done (17-12-28 01:16) @project(Daq)
 ✘ add open/close? @cancelled (17-12-28 01:15) @project(Devece)
 ✘ Channel <- OutputChannel / InputChannel @cancelled (17-12-28 01:15) @project(Daq)
 ✔ Modularize - make each I/O a separate class/module, Q8 inherent from all @done (17-12-28 01:15) @project(Daq)
 ✘ is this necessary, really? @cancelled (17-12-28 01:14) @project(Devece)
 ✘ Should this expose "on_enable", "on_disable", etc? Could alleviate "enable_" issue @cancelled (17-12-28 01:14) @project(Device)
 ✔ make enable/disable return bool @done (17-12-28 01:14) @project(Devece)
 ✔ Add control-C handler function/class @done (17-12-22 15:15) @project(Console)
 ✔ Make NonCopyable @done (17-12-21 11:31) @project(Mutex)
 ✔ Change to match format of new classes @done (17-12-21 11:31) @project(Mutex)
